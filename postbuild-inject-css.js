const fs = require('fs');
const path = require('path');

const distDir = path.join(__dirname, 'dist');
const assetsDir = path.join(distDir, 'assets');

// 1. –ó–Ω–∞—Ö–æ–¥–∏–º–æ –ø–µ—Ä—à–∏–π .css —Ñ–∞–π–ª —É dist/assets/
const cssFile = fs.readdirSync(assetsDir).find(f => f.endsWith('.css'));
if (!cssFile) {
  console.error('‚ùå CSS —Ñ–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ —É dist/assets/');
  process.exit(1);
}
const cssHref = `assets/${cssFile}`;

// 2. –ü—Ä–æ—Ö–æ–¥–∏–º–æ –ø–æ –≤—Å—ñ—Ö .html —É dist/
fs.readdirSync(distDir)
  .filter(f => f.endsWith('.html'))
  .forEach(htmlFile => {
    const htmlPath = path.join(distDir, htmlFile);
    let html = fs.readFileSync(htmlPath, 'utf8');
    // –Ø–∫—â–æ –ª—ñ–Ω–∫ –≤–∂–µ —î ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ
    if (html.includes(cssHref)) return;
    // –í—Å—Ç–∞–≤–ª—è—î–º–æ –ø–µ—Ä–µ–¥ </head>
    html = html.replace(
      /<\/head>/i,
      `  <link rel="stylesheet" href="${cssHref}" />\n</head>`
    );
    fs.writeFileSync(htmlPath, html, 'utf8');
    console.log(`‚úÖ –î–æ–¥–∞–Ω–æ CSS —É ${htmlFile}`);
  });

// 3. –î–æ–¥–∞—î–º–æ main-*.js —É –≤—Å—ñ HTML-—Ñ–∞–π–ª–∏ dist
const mainJsFile = fs.readdirSync(assetsDir).find(f => f.startsWith('main-') && f.endsWith('.js'));
if (!mainJsFile) {
  console.error('‚ùå JS —Ñ–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ —É dist/assets/');
  process.exit(1);
}
const jsSrc = `assets/${mainJsFile}`;

fs.readdirSync(distDir)
  .filter(f => f.endsWith('.html'))
  .forEach(htmlFile => {
    const htmlPath = path.join(distDir, htmlFile);
    let html = fs.readFileSync(htmlPath, 'utf8');
    // –Ø–∫—â–æ —Å–∫—Ä–∏–ø—Ç –≤–∂–µ —î ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ
    if (html.includes(jsSrc)) return;
    // –í—Å—Ç–∞–≤–ª—è—î–º–æ –ø–µ—Ä–µ–¥ </body>
    html = html.replace(
      /<\/body>/i,
      `  <script type="module" src="${jsSrc}"></script>\n</body>`
    );
    fs.writeFileSync(htmlPath, html, 'utf8');
    console.log(`‚úÖ –î–æ–¥–∞–Ω–æ JS —É ${htmlFile}`);
  });

console.log('üéâ –í—Å—ñ HTML-—Ñ–∞–π–ª–∏ —É dist —Ç–µ–ø–µ—Ä –º–∞—é—Ç—å –ª—ñ–Ω–∫ –Ω–∞ CSS!'); 